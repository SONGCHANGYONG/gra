package a0311;

import java.util.Arrays;
import java.util.Scanner;
    //함수가 사용되는 순서대로 정렬시켜줘야 편함


public class ReStudy02 {
	//생성자는 보통 메인 위에생성
	
	//변수 선언부 정대로 초기화라고 안함.
	//초기화는 무조건 생성자에서 함
	public String 반이름; //반이름 선언
	public int 국어성적[]; //메인에서쓰게하기위해 public붙임
	public int 총점 = 0;
	public float 평균 = 0;
	public int 학생수 = 0;
	
	
	
	//아래 주석문을 한메서드로 만듬
	
	
	/*//자바반
	int 자바반_국어성적[];//한클레스안에 같은 이름의 변수가 존재할수 없다 (지역변수는 상관없다.)
	int 자바반_총점 = 0;
	float 자바반_평균 = 0;
	final int 자바반_학생수 = 5;
    
	//웹반
	int 웹반_국어성적[];
	int 웹반_총점 = 0;
	float 웹반_평균 = 0;
	final int 웹반_학생수 = 4;
	
	//자바디자인반
	int 자바디자인반_국어성적[];
	int 자바디자인반_총점 = 0;
	float 자바디자인반_평균 = 0;
	final int 자바디자인반_학생수 = 4;
	*/
	
	//성적 입력 메소드 분리
      public  void 성적입력() { //배출할 함수형을써주면됨 int[] int형 배열
			                             //성적입력안 학생수, 국어성적 리턴값, 
			//int[] 국어성적 = new int[this.학생수]; //this 붙이면 확실해짐 this 자기 자신안에라는뜻
			Scanner sc = new Scanner(System.in);
			this.국어성적 = new int[학생수];
			
			System.out.println(this.반이름 + "의 국어성적 입력 해 주세요."+"😊😊");//윈도우키 + . =이모지 삽입가능 
			for (int i = 0; i < this.학생수; i++) {
				System.out.print(i+"번, 국어성적을 입력 해 주세요..");
				국어성적[i] = sc.nextInt();
			}
			
		}
	
	//총점계산 메소드 분리
	public void 총점계산() {//메소드에 리턴값 1개가 필요 void느 리턴값 없음
		int 총점 = 0 ; //지역변수 선언              //메소드() 밖에서 불어올 값들을 입력해준다.
		for (int i = 0; i < 학생수; i++) {
			총점 =총점 +this.국어성적[i]; //리턴값 필요없어짐 int void로변경. 값 입력 받을 필요없음 return값 없어짐 ()안에 외부에서 값을 받아올 필요가 없어짐
		}
		 this.총점 = 총점; 
		
	}
	
	public  void 평균계산() {
		float 평균 = 총점 /학생수;
		
		this.평균 = 평균;  
		
		
	}
	
	
	
	public  void 총점과평균_출력() {//()안에 외부에서 불러올 데이터 값들을 입력해준다.
		평균계산();    //안에서만 쓰면되기때문에 직접 변수선언 float 평균
		                                  //여기서 받은값을 아래의 평균계산으로 넘김  
		String str = "국어성적의 총합은 ";
		for (int i = 0; i < this.학생수; i++) {
			// 인덱스 i가 (학생수 -1) == (배열의 마지막 인덱스) 이면
			str = str + this.국어성적[i];
			if (i != (this.학생수 - 1)) {
				str = str + " + ";
			}

		}
		System.out.println(str);
		System.out.println("국어성적의 총 점수 = " + 총점 + "\n국어성적의 평균 = " + 평균); // \n = 다음줄
		
	}
	

	
	public static void main(String[] args) {//메인함수는 안 불러도 실행가능 콜백
		//성적입력 메소드로 분리
		//총점계산
		//국어점수출력()
		
		// static 공용또는 공공의 접근제한자를 사용하는 경우
	//	int 국어성적[]; //지역변수 main안에서만 사용가능함 
		
		
	//	int 총점 = 0;
		
	//	float 평균 = 0;
		
	//	final int 학생수 = 3;
		
		//메인 바깥에 있는 메서드를 쓰려변 불러야함 (콜)
		//메인에서 사용가능하게 하려면 static이 붙어있어야함 객체 static 객체지향 프로그램이 일반으로 바뀜
		//내가 만든 함수도 컨트롤  스페이스 누르면 실행됨 
	//	국어성적 = 성적입력(학생수); // 국어 성적안에 성력입력값을 넣음 (반환값이 국어성적)
		
	//	총점 = 총점계산(국어성적, 학생수); //총점에 총점계산메서드를 불러온다
		
	//	평균 = 평균계산(총점, 학생수);
		
	//	총점과평균_출력(국어성적, 총점, 학생수); 
		
		
		
		//객체지향선언하기
		
		//객체지향을 쓰는이유 안전하다
		//객체지향 메인속 중복되는 변수들 따로 선언해줌
		//인스턴스 개인화 new 선언은 개인화
		//자바반과 웹프론트반은 관련이 없다.
		
		//자바반. 총점과평균_풀력() 학생수 5명 인원수가 달라 자바반용 국어성적이필요
		//자바반에 성적을 낸다
		ReStudy02 자바반 = new ReStudy02("자바반", 10);//new 선언은 완벽한 독립개체를 선언하는것, 개인화 static 없을땐 .사용
		
		자바반.성적입력();
		자바반.총점계산();// 객체지향을 쓰면 자동으로 동기화해줌
		자바반.평균계산();
		자바반.총점과평균_출력();
		
		//웹반의 성적을 낸다.
		//웹반. 총점과평균_풀력() 학생수 4명
		ReStudy02 웹반 = new ReStudy02("웹반", 7);
		
		웹반.성적입력();
		웹반.총점계산();
		웹반.평균계산();
		웹반.총점과평균_출력();//.친후 오타나거나 안내창 사라졌을떄 컨트롤 스페이스바 들어가야할걸 보여줌
	
		//자바디자인반 추가
	    ReStudy02 자바디자인반 = new ReStudy02("자바디자인반", 5);
	    자바디자인반.성적입력();
	    자바디자인반.총점계산();
	    자바디자인반.평균계산();
	    자바디자인반.총점과평균_출력();
	    
	    //생성자 준비단계에서 모든걸 준비해놓음. 편하다. 생성자는 이름이같음
	}
	    public ReStudy02(String 반이름, int 학생수) { //생성자 규칙 -- 무조건 실행 된다.(콜백함수), 1.결과값이없다. 2.클래스이름과 동일해야한다 2.생성자는 타입을 가져선안됨 (void 가틍ㄴ거 안됨)
		                                            //입력값이 없는 생성자 함수{이안에 아무것도없으면}(디폴트 생성자(자동으로 생성))   함수{이안에 있으면} (사용자 정의 디폴트 생성자) 
        this.반이름 = 반이름; //동명이인 다른곳에 위치함 this.으로 구분 자기자신안의 public ReStudy02안의 반이름 =
		this.학생수 = 학생수; // 좌변의 학생수는 클래스의 맴버변수 ,우측은 외부로부터 전달된 지역변수 , 전구표시 노란밑줄 (워닝 :전체범위로보면 에러가아님, 작은범위로보면 에러의 가능성이 있음, 워닝은 잡아주는게 좋음)
		this.국어성적 = 국어성적;
		//클러스맴버변수 초기화 코드 필요
		this.총점 = 총점;
		this.평균 = 평균;
    }
		
	}
          